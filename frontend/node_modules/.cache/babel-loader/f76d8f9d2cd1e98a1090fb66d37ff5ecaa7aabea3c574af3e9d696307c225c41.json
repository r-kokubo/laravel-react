{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chat=()=>{const[prompt,setPrompt]=useState('');const[response,setResponse]=useState('');const handleSubmit=async e=>{e.preventDefault();try{// const res = await axios.post('http://localhost:8000/api/openai/chat', { prompt });\nconst res=await axios.post('http://localhost:8000/api/gemini/chat',{prompt});if(res.data.error){console.error('Error:',res.data.error.message);setResponse(res.data.error.message);}else{setResponse(res.data);}}catch(error){console.error('Error:',error);setResponse('An error occurred. Please try again.');}};return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-100 flex flex-col items-center justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow-md rounded-lg p-8 max-w-lg w-full\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold mb-4 text-center text-gray-800\",children:\"AI\\u3078\\u306E\\u8CEA\\u554F\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"textarea\",{value:prompt,onChange:e=>setPrompt(e.target.value),placeholder:\"Enter your prompt here\",className:\"w-full p-4 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full bg-blue-500 text-white py-2 rounded-lg hover:bg-blue-600 transition\",children:\"Send\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold text-gray-800 mb-2\",children:\"AI\\u304B\\u3089\\u306E\\u56DE\\u7B54:\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-700 bg-gray-100 p-4 rounded-lg\",children:response})]})]})});};export default Chat;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","Chat","prompt","setPrompt","response","setResponse","handleSubmit","e","preventDefault","res","post","data","error","console","message","className","children","onSubmit","value","onChange","target","placeholder","type"],"sources":["/app/src/Components/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Chat = () => {\n    const [prompt, setPrompt] = useState('');\n    const [response, setResponse] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            // const res = await axios.post('http://localhost:8000/api/openai/chat', { prompt });\n            const res = await axios.post('http://localhost:8000/api/gemini/chat', { prompt });\n            if (res.data.error) {\n                console.error('Error:', res.data.error.message);\n                setResponse(res.data.error.message);\n            } else {\n                setResponse(res.data);\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            setResponse('An error occurred. Please try again.');\n        }\n    };\n\n    return (\n        <div className=\"min-h-screen bg-gray-100 flex flex-col items-center justify-center\">\n            <div className=\"bg-white shadow-md rounded-lg p-8 max-w-lg w-full\">\n                <h1 className=\"text-2xl font-bold mb-4 text-center text-gray-800\">AIへの質問</h1>\n                <form onSubmit={handleSubmit} className=\"space-y-4\">\n                    <textarea\n                        value={prompt}\n                        onChange={(e) => setPrompt(e.target.value)}\n                        placeholder=\"Enter your prompt here\"\n                        className=\"w-full p-4 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:outline-none\"\n                    />\n                    <button\n                        type=\"submit\"\n                        className=\"w-full bg-blue-500 text-white py-2 rounded-lg hover:bg-blue-600 transition\"\n                    >\n                        Send\n                    </button>\n                </form>\n                <div className=\"mt-6\">\n                    <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">AIからの回答:</h2>\n                    <p className=\"text-gray-700 bg-gray-100 p-4 rounded-lg\">{response}</p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Chat;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,IAAI,CAAGA,CAAA,GAAM,CACf,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACS,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAE5C,KAAM,CAAAW,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElB,GAAI,CACA;AACA,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAb,KAAK,CAACc,IAAI,CAAC,uCAAuC,CAAE,CAAER,MAAO,CAAC,CAAC,CACjF,GAAIO,GAAG,CAACE,IAAI,CAACC,KAAK,CAAE,CAChBC,OAAO,CAACD,KAAK,CAAC,QAAQ,CAAEH,GAAG,CAACE,IAAI,CAACC,KAAK,CAACE,OAAO,CAAC,CAC/CT,WAAW,CAACI,GAAG,CAACE,IAAI,CAACC,KAAK,CAACE,OAAO,CAAC,CACvC,CAAC,IAAM,CACHT,WAAW,CAACI,GAAG,CAACE,IAAI,CAAC,CACzB,CACJ,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAC9BP,WAAW,CAAC,sCAAsC,CAAC,CACvD,CACJ,CAAC,CAED,mBACIP,IAAA,QAAKiB,SAAS,CAAC,oEAAoE,CAAAC,QAAA,cAC/EhB,KAAA,QAAKe,SAAS,CAAC,mDAAmD,CAAAC,QAAA,eAC9DlB,IAAA,OAAIiB,SAAS,CAAC,mDAAmD,CAAAC,QAAA,CAAC,4BAAM,CAAI,CAAC,cAC7EhB,KAAA,SAAMiB,QAAQ,CAAEX,YAAa,CAACS,SAAS,CAAC,WAAW,CAAAC,QAAA,eAC/ClB,IAAA,aACIoB,KAAK,CAAEhB,MAAO,CACdiB,QAAQ,CAAGZ,CAAC,EAAKJ,SAAS,CAACI,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE,CAC3CG,WAAW,CAAC,wBAAwB,CACpCN,SAAS,CAAC,kFAAkF,CAC/F,CAAC,cACFjB,IAAA,WACIwB,IAAI,CAAC,QAAQ,CACbP,SAAS,CAAC,4EAA4E,CAAAC,QAAA,CACzF,MAED,CAAQ,CAAC,EACP,CAAC,cACPhB,KAAA,QAAKe,SAAS,CAAC,MAAM,CAAAC,QAAA,eACjBlB,IAAA,OAAIiB,SAAS,CAAC,0CAA0C,CAAAC,QAAA,CAAC,mCAAQ,CAAI,CAAC,cACtElB,IAAA,MAAGiB,SAAS,CAAC,0CAA0C,CAAAC,QAAA,CAAEZ,QAAQ,CAAI,CAAC,EACrE,CAAC,EACL,CAAC,CACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAAH,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}