{"ast":null,"code":"var _jsxFileName = \"/app/src/Components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const sendMessage = async sender => {\n    if (!input.trim()) return;\n    const newMessage = {\n      sender,\n      content: input\n    };\n    setMessages([...messages, newMessage]);\n    try {\n      const response = await axios.post('http://localhost/api/chat', {\n        message: input,\n        sender\n      });\n      const botMessage = {\n        sender: sender === 'chatgpt' ? 'copilot' : 'chatgpt',\n        content: response.data.response\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxHeight: '400px',\n        overflowY: 'scroll'\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.sender === 'chatgpt' ? 'left' : 'right',\n          margin: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Type a message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendMessage('chatgpt'),\n      children: \"Send as ChatGPT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sendMessage('copilot'),\n      children: \"Send as Copilot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","input","setInput","sendMessage","sender","trim","newMessage","content","response","post","message","botMessage","data","prev","error","console","children","style","maxHeight","overflowY","map","msg","index","textAlign","margin","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/app/src/Components/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  const sendMessage = async (sender) => {\n    if (!input.trim()) return;\n\n    const newMessage = { sender, content: input };\n    setMessages([...messages, newMessage]);\n\n    try {\n      const response = await axios.post('http://localhost/api/chat', {\n        message: input,\n        sender,\n      });\n\n      const botMessage = {\n        sender: sender === 'chatgpt' ? 'copilot' : 'chatgpt',\n        content: response.data.response,\n      };\n\n      setMessages((prev) => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n\n    setInput('');\n  };\n\n  return (\n    <div>\n      <div style={{ maxHeight: '400px', overflowY: 'scroll' }}>\n        {messages.map((msg, index) => (\n          <div\n            key={index}\n            style={{\n              textAlign: msg.sender === 'chatgpt' ? 'left' : 'right',\n              margin: '10px',\n            }}\n          >\n            <b>{msg.sender}:</b> {msg.content}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Type a message\"\n      />\n      <button onClick={() => sendMessage('chatgpt')}>Send as ChatGPT</button>\n      <button onClick={() => sendMessage('copilot')}>Send as Copilot</button>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}