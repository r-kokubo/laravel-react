{"ast":null,"code":"var _jsxFileName = \"/app/src/Components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [response, setResponse] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('http://localhost:8000/api/gemini/chat', {\n        prompt\n      });\n      setResponse(res);\n      // // choicesが存在するか確認\n      // if (res.data.choices && res.data.choices.length > 0) {\n      //     setResponse(res.data.choices[0].message.content);\n      // } else {\n      //     setResponse(\"No response from AI.\");\n      // }\n    } catch (error) {\n      console.error('Error:', error);\n      setResponse('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ChatGPT React Client\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: prompt,\n        onChange: e => setPrompt(e.target.value),\n        placeholder: \"Enter your prompt here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"f7/ly1Eyh5qbUOx1OL12RYnrAkI=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chat","_s","prompt","setPrompt","response","setResponse","handleSubmit","e","preventDefault","res","post","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["/app/src/Components/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Chat = () => {\n    const [prompt, setPrompt] = useState('');\n    const [response, setResponse] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n    \n        try {\n            const res = await axios.post('http://localhost:8000/api/gemini/chat', { prompt });\n    \n            setResponse(res);\n            // // choicesが存在するか確認\n            // if (res.data.choices && res.data.choices.length > 0) {\n            //     setResponse(res.data.choices[0].message.content);\n            // } else {\n            //     setResponse(\"No response from AI.\");\n            // }\n        } catch (error) {\n            console.error('Error:', error);\n            setResponse('An error occurred. Please try again.');\n        }\n    };\n\n    return (\n        <div>\n            <h1>ChatGPT React Client</h1>\n            <form onSubmit={handleSubmit}>\n                <textarea\n                    value={prompt}\n                    onChange={(e) => setPrompt(e.target.value)}\n                    placeholder=\"Enter your prompt here\"\n                />\n                <button type=\"submit\">Send</button>\n            </form>\n            <div>\n                <h2>Response:</h2>\n                <p>{response}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default Chat;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,uCAAuC,EAAE;QAAER;MAAO,CAAC,CAAC;MAEjFG,WAAW,CAACI,GAAG,CAAC;MAChB;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BN,WAAW,CAAC,sCAAsC,CAAC;IACvD;EACJ,CAAC;EAED,oBACIN,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BlB,OAAA;MAAMmB,QAAQ,EAAEZ,YAAa;MAAAO,QAAA,gBACzBd,OAAA;QACIoB,KAAK,EAAEjB,MAAO;QACdkB,QAAQ,EAAGb,CAAC,IAAKJ,SAAS,CAACI,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE;QAC3CG,WAAW,EAAC;MAAwB;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACFlB,OAAA;QAAQwB,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACPlB,OAAA;MAAAc,QAAA,gBACId,OAAA;QAAAc,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBlB,OAAA;QAAAc,QAAA,EAAIT;MAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAChB,EAAA,CAxCID,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AA0CV,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}